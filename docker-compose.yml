version: "3.8"

x-airflow-common: &airflow-common
  image: apache/airflow:2.10.1
  environment:
    &common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    AIRFLOW_CONN_FS_DEFAULT: "fs://?basepath=/opt/airflow/data"
    AIRFLOW_CONN_FS_ROOT: "fs://?basepath=/"
    _PIP_ADDITIONAL_REQUIREMENTS: ""
    AIRFLOW_UID: "${AIRFLOW_UID}"
    AIRFLOW_GID: "${AIRFLOW_GID}"
    TZ: "America/Bogota"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "
      airflow db init &&
      airflow users create         --username admin         --password admin         --firstname Brian         --lastname Admin         --role Admin         --email admin@example.com
    "

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer

volumes:
  postgres-db-volume:
